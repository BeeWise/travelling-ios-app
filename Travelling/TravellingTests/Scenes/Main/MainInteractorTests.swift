//
//  MainInteractorTests.swift
//  Travelling
//
//  Created by Dimitri Strauneanu on 12/09/2020.
//  Copyright (c) 2020 Travelling. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Travelling
import XCTest

class MainInteractorTests: XCTestCase {
    var sut: MainInteractor!
    var presenterSpy: MainPresentationLogicSpy!
    var workerSpy: MainWorkerSpy!
    
    // MARK: - Test lifecycle
    
    override func setUp() {
        super.setUp()
        self.setupMainInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: - Test setup
    
    func setupMainInteractor() {
        self.sut = MainInteractor()
        
        self.presenterSpy = MainPresentationLogicSpy()
        self.sut.presenter = self.presenterSpy
        
        self.workerSpy = MainWorkerSpy(delegate: self.sut)
        self.sut.worker = self.workerSpy
    }
    
    // MARK: - Tests
    
    func testShouldSelectSceneShouldReturnTrueForExploreScene() {
        self.sut.user = nil
        let value = self.sut.shouldSelectScene(index: MainModels.Scenes.explore.rawValue)
        XCTAssertTrue(value)
    }
    
    func testShouldSelectSceneShouldReturnTrueForCurrentUser() {
        self.sut.user = User(id: "userId")
        let value = self.sut.shouldSelectScene(index: MainModels.Scenes.myProfile.rawValue)
        XCTAssertTrue(value)
    }
    
    func testShouldSelectSceneShouldReturnFalseWhenThereIsNoUser() {
        self.sut.user = nil
        let value = self.sut.shouldSelectScene(index: MainModels.Scenes.myProfile.rawValue)
        XCTAssertFalse(value)
    }
    
    func testShouldSetupScenesShouldAskThePresenterToPresentSetupScenes() {
        self.sut.shouldSetupScenes()
        XCTAssertTrue(self.presenterSpy.presentSetupScenesCalled)
    }
    
    func testShouldSelectInitialSceneShouldAskThePresenterToPresentInitialSelectScene() {
        self.sut.shouldSelectInitialScene()
        XCTAssertTrue(self.presenterSpy.presentSelectSceneCalled)
    }
    
    // MARK: - Navigation tests
    
    func testShouldNavigateToOnboardingShouldAskThePresenterToPresentNavigateToOnboardingForNoUser() {
        self.sut.user = nil
        self.sut.shouldNavigateToOnboarding(request: MainModels.OnboardingNavigation.Request(index: MainModels.Scenes.myProfile.rawValue))
        XCTAssertTrue(self.presenterSpy.presentNavigateToOnboardingCalled)
    }
    
    func testShouldNavigateToOnboardingShouldNotAskThePresenterToPresentNavigateToOnboardingForNoUserForExploreScene() {
        self.sut.user = nil
        self.sut.shouldNavigateToOnboarding(request: MainModels.OnboardingNavigation.Request(index: MainModels.Scenes.explore.rawValue))
        XCTAssertFalse(self.presenterSpy.presentNavigateToOnboardingCalled)
    }
    
    func testShouldNavigateToOnboardingShouldNotAskThePresenterToPresentNavigateToOnboardingForCurrentUser() {
        self.sut.user = User(id: "userId")
        self.sut.shouldNavigateToOnboarding(request: MainModels.OnboardingNavigation.Request(index: MainModels.Scenes.myProfile.rawValue))
        XCTAssertFalse(self.presenterSpy.presentNavigateToOnboardingCalled)
    }
}
