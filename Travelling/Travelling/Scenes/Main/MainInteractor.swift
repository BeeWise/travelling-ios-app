//
//  MainInteractor.swift
//  Travelling
//
//  Created by Dimitri Strauneanu on 12/09/2020.
//  Copyright (c) 2020 Travelling. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func shouldSelectScene(index: Int) -> Bool
    
    func shouldSetupScenes()
    func shouldSelectInitialScene()
    
    func shouldNavigateToOnboarding(request: MainModels.OnboardingNavigation.Request)
}

class MainInteractor: MainBusinessLogic, MainWorkerDelegate {
    var presenter: MainPresentationLogic?
    var worker: MainWorker?
    
    var user: User?
    
    init() {
        self.worker = MainWorker(delegate: self)
    }
    
    func shouldSelectScene(index: Int) -> Bool {
        return self.isUserLoggedIn() || index == self.exploreSceneIndex()
    }
    
    func shouldSetupScenes() {
        self.presenter?.presentSetupScenes()
    }
    
    func shouldSelectInitialScene() {
        self.presenter?.presentSelectScene(response: MainModels.SceneSelection.Response(index: self.exploreSceneIndex()))
    }
    
    func shouldNavigateToOnboarding(request: MainModels.OnboardingNavigation.Request) {
        if let index = request.index, index == self.exploreSceneIndex() {
            return
        }
        if !self.isUserLoggedIn() {
            self.presenter?.presentNavigateToOnboarding()
        }
    }
}

// MARK: - Auxiliary

extension MainInteractor {
    private func isUserLoggedIn() -> Bool {
        return self.user != nil
    }
    
    private func exploreSceneIndex() -> Int {
        return MainModels.Scenes.explore.rawValue
    }
}
