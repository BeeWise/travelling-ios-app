//
//  FullscreenImageWorker.swift
//  Travelling
//
//  Created by Dimitri Strauneanu on 04/10/2020.
//  Copyright (c) 2020 Travelling. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FullscreenImageWorkerDelegate: class {
    func successDidFetchImage(image: UIImage?)
    func failureDidFetchImage(error: OperationError)
}

class FullscreenImageWorker {
    weak var delegate: FullscreenImageWorkerDelegate?
    
    var imageTask: ImageTaskProtocol = TaskConfigurator.shared.imageTask()
    
    init(delegate: FullscreenImageWorkerDelegate?) {
        self.delegate = delegate
    }
    
    func fetchImage(name: String?) {
        self.imageTask.fetchImage(model: ImageTaskModels.Fetch.Request(imageName: name)) { result in
            switch result {
                case .success(let value): self.delegate?.successDidFetchImage(image: value.image); break
                case .failure(let error): self.delegate?.failureDidFetchImage(error: error); break
            }
        }
    }
}
