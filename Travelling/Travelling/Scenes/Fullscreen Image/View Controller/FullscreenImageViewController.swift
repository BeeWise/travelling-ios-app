//
//  FullscreenImageViewController.swift
//  Travelling
//
//  Created by Dimitri Strauneanu on 04/10/2020.
//  Copyright (c) 2020 Travelling. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class FullscreenImageViewController: UIViewController {
    var interactor: FullscreenImageBusinessLogic?
    var router: FullscreenImageRoutingLogic?
    
    weak var dismissButton: UIButton!
    weak var scrollView: UIScrollView!
    weak var imageView: LoadingImageView!
    
    var imageName: String?
    
    // MARK: - Object lifecycle
    
    convenience init(imageName: String?) {
        self.init(nibName: nil, bundle: nil)
        self.imageName = imageName
    }
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        self.setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.setup()
    }
    
    // MARK: - Setup
    
    private func setup() {
        let viewController = self
        let interactor = FullscreenImageInteractor()
        let presenter = FullscreenImagePresenter()
        let router = FullscreenImageRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.displayer = viewController
        router.viewController = viewController
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupSubviews()
        self.setupSubviewsConstraints()
        
        self.interactor?.shouldSetImage(request: FullscreenImageModels.ImageSetup.Request(name: self.imageName))
        self.interactor?.shouldFetchImage()
    }
}

extension FullscreenImageViewController: UIScrollViewDelegate {
    func viewForZooming(in scrollView: UIScrollView) -> UIView? {
        return self.imageView
    }
}
