//
//  SignUpViewController.swift
//  Travelling
//
//  Created by Dimitri Strauneanu on 06/10/2020.
//  Copyright (c) 2020 Travelling. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SignUpViewControllerDelegate: NSObjectProtocol {
    func signUpViewController(_ viewController: SignUpViewController?, didSignUpUser user: User)
}

class SignUpViewController: UITableViewController {
    var interactor: SignUpBusinessLogic?
    var router: SignUpRoutingLogic?
    
    var displayedItems: [SignUpModels.Item] = []
    
    var textFields: [(UITextField?, SignUpModels.ItemType)] = []
    
    weak var delegate: SignUpViewControllerDelegate?
    
    // MARK: - Object lifecycle
    
    init() {
        super.init(style: .grouped)
        self.setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        return nil
    }
    
    // MARK: - Setup
    
    private func setup() {
        let viewController = self
        let interactor = SignUpInteractor()
        let presenter = SignUpPresenter()
        let router = SignUpRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.displayer = viewController
        router.viewController = viewController
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupSubviews()
        self.interactor?.shouldSetupItems()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.showNavigationBar()
    }
}

// MARK: - Image picker controller

extension SignUpViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate {
    func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {
        self.router?.dismissViewController()
    }
    
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        self.router?.dismissViewController()
        
        let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage
        self.interactor?.shouldUpdateImageItem(request: SignUpModels.UpdateImageItem.Request(image: image, type: SignUpModels.ItemType.photo))
    }
}
