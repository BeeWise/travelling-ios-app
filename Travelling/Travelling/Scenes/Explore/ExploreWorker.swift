//
//  ExploreWorker.swift
//  Travelling
//
//  Created by Dimitri Strauneanu on 13/09/2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ExploreWorkerDelegate: class {
    func successDidFetchItems(items: [Place])
    func failureDidFetchItems(error: OperationError)
}

class ExploreWorker {
    weak var delegate: ExploreWorkerDelegate?
    
    var placesTask: PlacesTaskProtocol = TaskConfigurator.shared.placesTask()
    
    init(delegate: ExploreWorkerDelegate?) {
        self.delegate = delegate
    }
    
    func fetchItems(page: Int, limit: Int) {
        self.placesTask.fetchPlaces(model: PlacesTaskModels.Fetch.Request(page: page, limit: limit)) { result in
            switch result {
                case .success(let value): self.delegate?.successDidFetchItems(items: value.places); break
                case .failure(let error): self.delegate?.failureDidFetchItems(error: error); break
            }
        }
    }
}
